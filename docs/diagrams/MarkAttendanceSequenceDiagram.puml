@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":MarkAttendanceCommandParser" as MarkAttendanceCommandParser LOGIC_COLOR
participant "d:MarkAttendanceCommand" as MarkAttendanceCommand LOGIC_COLOR
participant "r:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "m:Model" as Model MODEL_COLOR
participant ":Nusnetid" as Nusnetid MODEL_COLOR
participant ":AttendanceStatus" as AttendanceStatus MODEL_COLOR
end box

[-> LogicManager : execute("mark_attendance i/E1234567 w/3 status/present")

LogicManager -> AddressBookParser : parseCommand("mark_attendance i/E1234567 w/3 status/present")
activate LogicManager
activate AddressBookParser

' Create command parser
create MarkAttendanceCommandParser
AddressBookParser -> MarkAttendanceCommandParser
activate MarkAttendanceCommandParser

MarkAttendanceCommandParser --> AddressBookParser
deactivate MarkAttendanceCommandParser

' Start parsing
AddressBookParser -> MarkAttendanceCommandParser : parse("i/E1234567 w/3 status/present")
activate MarkAttendanceCommandParser

' === Create value objects ===
create Nusnetid
MarkAttendanceCommandParser -> Nusnetid : new Nusnetid("E1234567")
activate Nusnetid
Nusnetid --> MarkAttendanceCommandParser
deactivate Nusnetid

create AttendanceStatus
MarkAttendanceCommandParser -> AttendanceStatus : AttendanceStatus.fromString("present")
activate AttendanceStatus
AttendanceStatus --> MarkAttendanceCommandParser
deactivate AttendanceStatus

alt valid arguments
    create MarkAttendanceCommand
    MarkAttendanceCommandParser -> MarkAttendanceCommand : new MarkAttendanceCommand(Nusnetid, 3, AttendanceStatus)
    activate MarkAttendanceCommand
    MarkAttendanceCommand --> MarkAttendanceCommandParser
    deactivate MarkAttendanceCommand

    MarkAttendanceCommandParser --> AddressBookParser : d
    deactivate MarkAttendanceCommandParser
    ' Hidden arrow for destroy marker alignment
    MarkAttendanceCommandParser -[hidden]-> AddressBookParser
    destroy MarkAttendanceCommandParser

    AddressBookParser --> LogicManager : d
    deactivate AddressBookParser

    ' === Execute command ===
    LogicManager -> MarkAttendanceCommand : execute(m)
    activate MarkAttendanceCommand

    MarkAttendanceCommand -> Model : markAttendance(Nusnetid, 3, AttendanceStatus)
    activate Model
    Model --> MarkAttendanceCommand
    deactivate Model

    create CommandResult
    MarkAttendanceCommand -> CommandResult : new CommandResult("Marked attendance for John: present in week 3.")
    activate CommandResult
    CommandResult --> MarkAttendanceCommand
    deactivate CommandResult

    MarkAttendanceCommand --> LogicManager : r
    deactivate MarkAttendanceCommand
else invalid / missing arguments
    MarkAttendanceCommandParser --> AddressBookParser : throws ParseException(errorMessage)
    deactivate MarkAttendanceCommandParser

    AddressBookParser --> LogicManager : throws ParseException(errorMessage)
    deactivate AddressBookParser

    create CommandResult
    LogicManager -> CommandResult : new CommandResult("Invalid command format\n" + errorMessage)
    activate CommandResult
    CommandResult --> LogicManager : r
    deactivate CommandResult
end

[<--LogicManager
deactivate LogicManager

@enduml
